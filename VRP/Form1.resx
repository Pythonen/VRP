<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="buttonPoistu.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>